import sys
import numpy as np

poscar_file_name = sys.argv[1]
with open(poscar_file_name) as dump:
    print("generated by convert_to_outcar.py (from vasp POSCAR file)")
    for iteration, line in enumerate(dump):
        if iteration == 0:
            next(dump)
            lat = [list(map(float,next(dump).split())),
                list(map(float,next(dump).split())),
                list(map(float,next(dump).split()))]
            ele = next(dump).split()
            nions = list(map(int,next(dump).split()))
            for it in range(2):
                for e in range(len(ele)):
                    print(f" POTCAR:    PAW_PBE {ele[e]} 30Jan2020")
                print(" ")
            ipt = "   ions per type = "
            for e in range(len(ele)):
                ipt += " {:4} ".format(nions[e])
            ipt += "\n"
            print(ipt)
            print("      direct lattice vectors                 reciprocal lattice vectors")
            for it in range(3):
                print(f"  {lat[it][0]:>11.6f} {lat[it][1]:>11.6f} {lat[it][2]:>11.6f}  {0:>11.6f} {0:>11.6f} {0:>11.6f}")
            print(" ")
            print("Iteration      1")
            print("      direct lattice vectors                 reciprocal lattice vectors")
            for it in range(3):
                print(f"  {lat[it][0]:>11.6f} {lat[it][1]:>11.6f} {lat[it][2]:>11.6f}  {0:>11.6f} {0:>11.6f} {0:>11.6f}")
            print(" ")
        if "D" == line[0]:
            print(" POSITION                                       TOTAL-FORCE (eV/Angst)")
            print(" -----------------------------------------------------------------------------------")
            Atoms = []
            Natoms= int(sum(nions))
            for n in range(Natoms):
                Atoms.append((list(map(float,next(dump).split()[:3]))))
            Carte = np.matmul(np.array(Atoms),np.array(lat))
            fx, fy, fz = 0, 0, 0
            pe = 0
            for n in range(Natoms):
                print(f" {Carte[n][0]:>13.5f} {Carte[n][1]:>13.5f} {Carte[n][2]:>13.5f}    {fx:>13.5f} {fy:>13.5f} {fz:>13.5f}")
            print(" -----------------------------------------------------------------------------------")
            print(" -----------------------------------------------------------------------------------")
            print(" FREE ENERGIE OF THE ION-ELECTRON SYSTEM (eV)")
            print(" -----------------------------------------------------------------------------------")
            print(f"  free  energy   TOTEN  = {pe:>18.8f} eV\n")
            print("  energy without entropy= 0 energy(sigma->0) = 0\n\n")
